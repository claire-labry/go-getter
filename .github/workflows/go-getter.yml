name: go-getter

on: [push]

env:
  TEST_RESULTS_PATH: /tmp/test-results

jobs:

  linux-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.19]
    
    steps:
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create test directory
        run: |
          mkdir -p ${{env.TEST_RESULTS_PATH}}

      - name: Download go modules
        run: go mod download
      
      - name: Cache / restore go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      # Check go fmt output because it does not report non-zero when there are fmt changes
      - name: Run gofmt
        run: |
          go fmt ./...
          files=$(go fmt ./...)
            if [ -n "$files" ]; then
              echo "The following file(s) do not conform to go fmt:"
              echo "$files"
              exit 1
            fi
      
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@v1.8.2
      
      - name: Run go tests
        run: |
          PACKAGE_NAMES=$(go list ./...)
          echo "Running $(echo $PACKAGE_NAMES | wc -w) packages"
          echo $PACKAGE_NAMES
          gotestsum --format=short-verbose --junitfile $TEST_RESULTS_PATH/go-getter/gotestsum-report.xml -- -p 2 -cover -coverprofile=linux_cov.part $PACKAGE_NAMES
      
      # Save coverage report parts
      - name: Upload and save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux test results
          path: linux_cov.part

  windows-tests:
    runs-on: windows-latest
    strategy:
      matrix:
        go-version: [1.19]

    steps:
      - name: Run git config #Windows-only
        run: git config --global core.autocrlf false

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download go modules
        run: go mod download
        
      - name: Setup cache for go modules
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@v1.8.2
      
      - name: Run go tests
        shell: bash
        run: |
          PACKAGE_NAMES=$(go list ./...)
          echo "Running $(echo $PACKAGE_NAMES | wc -w) packages"
          echo $PACKAGE_NAMES
          gotestsum --format=short-verbose --junitfile $TEST_RESULTS_PATH/go-getter/gotestsum-report.xml -- -p 2 -cover -race -coverprofile=win_cov.part $PACKAGE_NAMES
      
      # Save coverage report parts
      - name: Upload and save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows test results
          path: win_cov.part
    